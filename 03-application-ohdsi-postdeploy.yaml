# Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with the License. 
# A copy of the License is located at
#    http://aws.amazon.com/apache2.0/
# or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
# either express or implied. See the License for the specific language governing permissions and limitations under the License.


AWSTemplateFormatVersion: '2010-09-09'
Description: Deploys the OHDSI Atlas and WebApi apps in an ElasticBeanstalk Environment. Sets up Atlas users and loads OHDSI schema and sample data on databases.

Parameters:
  WebAsgMax:
    AllowedPattern: ^((?!0$)[1-2]?[0-9]|30)$
    ConstraintDescription: Must be a number between 1 and 30.
    Default: 1
    Description: Specifies the maximum number of EC2 instances in the Web Autoscaling Group.
    Type: String
  WebAsgMin:
    AllowedPattern: ^([0-0]?[0-9]|10)$
    ConstraintDescription: Must be a number between 0 and 10.
    Default: 1
    Description: Specifies the minimum number of EC2 instances in the Web Autoscaling Group.
    Type: String
  WebAsgDesired:
    AllowedPattern: ^([0-2]?[0-9]|30)$
    ConstraintDescription: Must be a number between 1 and 30.
    Default: 1
    Description: Specifies the desired number of EC2 instances in the Web Autoscaling Group.
    Type: String
  WebInstanceType:
    AllowedValues:
      - t2.micro 
      - t2.small 
      - t2.medium 
      - t2.large 
      - t2.xlarge 
      - t2.2xlarge 
      - t3.micro 
      - t3.small 
      - t3.medium 
      - t3.large 
      - t3.xlarge 
      - t3.2xlarge 
      - m4.large 
      - m4.xlarge 
      - m4.2xlarge 
      - m5.large 
      - m5.xlarge 
      - m5.2xlarge 
      - c4.large 
      - c4.xlarge 
      - c4.2xlarge 
      - c5.large 
      - c5.xlarge 
      - c5.2xlarge 
      - r4.large 
      - r4.xlarge 
      - r5.large 
      - r5.xlarge 
    ConstraintDescription: Must be a valid Amazon EC2 instance type.
    Default: t2.micro
    Description: The Amazon EC2 instance type for your web instances.
    Type: String
  SslCertificate:
    Type: String
    Description: "AWS ARN to ACM generated SSL certificate." 
  EBEndpoint:
    Description: "The unique name to use for your Elastic Beanstalk URL (will be rendered http://(EBEndpoint).(region).elasticbeanstalk.com)"
    Type: String
  UseRoute53Boolean:
    AllowedValues:
      - true
      - false
    Default: true
    Description: Specifies whether a record set should be created in Route 53 for your OHDSI domain name.  If not, you will recieve a default Elastic Beanstalk DNS name (e.g. ohdsi.us-east-1.elasticbeanstalk.com).
    Type: String
  UseACMBoolean:
    AllowedValues:
      - true
      - false
    Default: true
    Description: Specifies whether an SSL certificate should be generated for your domain name using AWS Certificate Manager (ACM).  If one is not generated, HTTP will be used and an SSL certificate can be applied after deployment.
    Type: String
  HostedZoneName:
    Type: String
    Description: "The hosted zone that will be used by your application.  If using the Elastic Beanstalk provided hosted zone in us-east-1, just accept the default value."
    Default: us-east-1.elasticbeanstalk.com
  DomainName:
    AllowedPattern: ^$|(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
    Description: '[ Optional, only if using Route53 ] The sub-domain name of the OHDSI site.  This sub-domain will be prepended your specified Hosted Zone (e.g. ohdsi in ohdsi.example.edu).'
    Type: String
  DatabaseMasterPassword:
    Description: Must be letters (upper or lower), numbers, spaces, and these special characters `~#$%^&*()_+,-
    Type: String
    NoEcho: true
    AllowedPattern: ^([a-zA-Z0-9`~#$%^&*()_+,\\-])*$
    ConstraintDescription: The Amazon RDS master password. Letters, numbers, spaces, and these special characters `~#$%^&*()_+,-
  Sources:
    Description: Comma-delimited list of OMOP CDM schema sources to load into the Redshift datawarehouse
    Type: String
    AllowedPattern: ^([a-zA-Z0-9,])*$
    Default: CMSDESynPUF1k,CMSDESynPUF23m
  SourcesBucket:
    Description: S3 Bucket that contains DDL SQL files name after each 'Source'.sql that will be executed to load data into the OMOP CDM schema sources.
    Type: String
    AllowedPattern: ^([a-zA-Z0-9`~#$%^&*()_+,\\-])*$
    Default: ohdsi-sample-data  
  OMOPv:
    Description: The OHDSI CommonDataModel GitHub branch you want deployed (this specifies the version)
    Type: String
    Default: 'v5.3.1'
  Atlasv:
    Description: The OHDSI Atlas GitHub branch you want deployed (this specifies the version)
    Type: String
    Default: 'v2.7.1'
  WebAPIv:
    Description: OHDSI WebAPI GitHub branch you want deployed (this specifies the version)
    Type: String
    Default: 'v2.7.1'
  Achillesv:
    Description: OHDSI Achilles GitHub branch you want deployed (this specifies the version)
    Type: String
    Default: 'v1.5.0'
  OhdsiRToolsv:
    Description: OhdsiRTools GitHub branch you want deployed (this specifies the version)
    Type: String
    Default: 'v1.5.3'
  SqlRenderv:
    Description: OHDSI SqlRender GitHub branch you want deployed (this specifies the version)
    Type: String
    Default: 'v1.4.10'
  DatabaseConnectorv:
    Description: OHDSI DatabaseConnector GitHub branch you want deployed (this specifies the version)
    Type: String
    Default: 'v2.1.0'
  DatabaseConnectorJarsv:
    Description: OHDSI DatabaseConnector GitHub branch you want deployed (this specifies the version)
    Type: String
    Default: 'v1.0.0'
  EC2KeyName:
    Description: The EC2 Key Pair to use for the Atlas/WebAPI EC2 Instances.
    Type: AWS::EC2::KeyPair::KeyName
  PrivateDeployment:
    Type: String
    Description: "Is this going to be a private network deployment of OHDSI?"
    AllowedValues:
      - "true"
      - "false"
    Default: false
  AtlasSecurity:
    Type: String
    Description: "Use the RStudio usernames and passwords to authenticate access to Atlas?"
    AllowedValues:
      - "true"
      - "false"
    Default: false
  UserList:
    Description: Provide a comma separated list of usernames and passwords (user1,pass1,user2,pass2) to create on the R-Studio Server.
    Type: 'String'
    NoEcho: true

  VPCId:
    Type: AWS::EC2::VPC::Id
  SubnetPublicA:
    Type: AWS::EC2::Subnet::Id
  SubnetPublicB:
    Type: AWS::EC2::Subnet::Id
  SubnetAppA:
    Type: AWS::EC2::Subnet::Id
  SubnetAppB:
    Type: AWS::EC2::Subnet::Id
  SGPublic:
    Type: AWS::EC2::SecurityGroup::Id
  SGApp:
    Type: AWS::EC2::SecurityGroup::Id
  EBServiceRole:
    Type: String
  EBInstanceProfile:
    Type: String
  TempEC2InstanceProfile:
    Type: String
  RStudioTargetGroupArn:
    Type: String
  RDSEndpoint: 
    Type: String
  RedshiftEndpoint: 
    Type: String
  EBBucket:
    Type: String
    Description: 'S3 Bucket used to store the application package for Elastic Beanstalk.'
  RSRoleArn:
    Type: String


#Mapping to find the Amazon Linux AMI in each region.  This AMI is used for the temporary EC2 server.
Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-cfe4b2b0
    us-east-2:
      AMI: ami-40142d25
    us-west-1:
      AMI: ami-0e86606d
    us-west-2:
      AMI: ami-0ad99772
    ca-central-1:
      AMI: ami-03e86a67
    eu-west-1:
      AMI: ami-e4515e0e
    eu-west-2:
      AMI: ami-b2b55cd5
    eu-west-3:
      AMI: ami-d50bbaa8
    eu-central-1:
      AMI: ami-a058674b
    sa-east-1:
      AMI: ami-83d58fef
    ap-south-1:
      AMI: ami-5a8da735
    ap-southeast-1:
      AMI: ami-ed838091
    ap-southeast-2:
      AMI: ami-33f92051
    ap-northeast-1:
      AMI: ami-9c9443e3
    ap-northeast-2:
      AMI: ami-ebc47185
    ap-northeast-3:
      AMI: ami-09b8b674
  
  tomcatconfig:
    t2.micro:
      Xmx: 512m
    t2.small:
      Xmx: 1024m
    t2.medium: 
      Xmx: 2048m
    t2.large:
      Xmx: 4096m
    t2.xlarge:
      Xmx: 8192m
    t2.2xlarge:
      Xmx: 16384m
    t3.micro:
      Xmx: 512m
    t3.small:
      Xmx: 1024m
    t3.medium:
      Xmx: 2048m
    t3.large:
      Xmx: 4096m
    t3.xlarge:
      Xmx: 8192m
    t3.2xlarge:
      Xmx: 16384m
    m4.large:
      Xmx: 4096m
    m4.xlarge:
      Xmx: 8192m
    m4.2xlarge:
      Xmx: 16384m
    m5.large:
      Xmx: 4096m
    m5.xlarge:
      Xmx: 8192m
    m5.2xlarge:
      Xmx: 16384m
    c4.large:
      Xmx: 2048m
    c4.xlarge:
      Xmx: 4096m
    c4.2xlarge:
      Xmx: 8192m
    c5.large:
      Xmx: 2048m
    c5.xlarge:
      Xmx: 4096m
    c5.2xlarge:
      Xmx: 8192m
    r4.large:
      Xmx: 8192m
    r4.xlarge:
      Xmx: 16384m
    r5.large:
      Xmx: 8192m
    r5.xlarge:
      Xmx: 16384m
  
  Requires:
    CfnLambda:
      Type: Export
      ExportName: LZ-CFN-DateTime-0-0-2-LambdaArn
      Stack: LZ-CFN-DateTime-0-0-2

Conditions:
  DeployRoute53: 
    !Equals [ true, !Ref UseRoute53Boolean ]
  PrivateDeploy: 
    !Equals [ true, !Ref PrivateDeployment ]
  DeployACM: !And 
    - !Equals [ true, !Ref UseACMBoolean ]
    - !Condition DeployRoute53
  NotDeployACM: !Or
    - !Equals [ false, !Ref UseACMBoolean ]
    - !Equals [ false, !Ref UseRoute53Boolean ]


Resources:

# Defines the Elastic Beanstalk environment that deploys the load balancer and Atlas/WebAPI Tomcat servers in an auto-scaling group.
  OHDSIApp:
    Type: 'AWS::ElasticBeanstalk::Application'
    Description: OHDSI Atlas and WebAPI
    Properties:
      ApplicationVersions:
        - Description: Version 1.0
          SourceBundle:
            S3Bucket: !Ref EBBucket
            S3Key: ohdsi-webapi-atlas.zip
          VersionLabel: Initial Version
  Now:
    Metadata:
      UpdateWhenDesiredCapacityChange: !Ref WebAsgDesired
    Type: 'Custom::DateTime'
    Properties:
      ServiceToken: 
        Fn::ImportValue: !FindInMap [ Requires, CfnLambda, ExportName ]
      Format: '%Y-%m-%dT%H:%M:%SZ'
  OHDSIEnvironmentACM:
    Type: 'AWS::ElasticBeanstalk::Environment'
    Condition: DeployACM
    Properties:
      ApplicationName: !Ref OHDSIApp
      Description: Elastic Beanstalk deployment of Atlas / WebAPI
      SolutionStackName: 64bit Amazon Linux 2018.03 v3.1.6 running Tomcat 8.5 Java 8
      VersionLabel: Initial Version
      EnvironmentName: !Ref EBEndpoint
      CNAMEPrefix: !Ref EBEndpoint
      Tier:
        Name: WebServer
        Type: Standard
        Version: ' '
      OptionSettings:
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: IamInstanceProfile
          Value: !Ref EBInstanceProfile 
        - Namespace: 'aws:elasticbeanstalk:environment'
          OptionName: ServiceRole
          Value: !Ref EBServiceRole        
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: !Ref WebAsgMin
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: !Ref WebAsgMax
        - Namespace: aws:autoscaling:scheduledaction
          ResourceName: SetupDesiredCapacity
          OptionName: DesiredCapacity
          Value: !Ref WebAsgDesired
        - Namespace: aws:autoscaling:scheduledaction
          ResourceName: SetupDesiredCapacity
          OptionName: MinSize
          Value: !Ref WebAsgMin
        - Namespace: aws:autoscaling:scheduledaction
          ResourceName: SetupDesiredCapacity
          OptionName: MaxSize
          Value: !Ref WebAsgMax
        - Namespace: aws:autoscaling:scheduledaction
          ResourceName: SetupDesiredCapacity
          OptionName: StartTime
          Value: !GetAtt Now.Value
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: EC2KeyName
          Value: !Ref 'EC2KeyName'
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: !Ref WebInstanceType
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: SecurityGroups
          Value: !Ref SGApp
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: SSHSourceRestriction
          Value: 'tcp, 22, 22, 127.0.0.1/32'
        - Namespace: aws:autoscaling:trigger
          OptionName: MeasureName
          Value: CPUUtilization
        - Namespace: aws:autoscaling:trigger
          OptionName: Unit
          Value: Percent
        - Namespace: aws:autoscaling:trigger
          OptionName: UpperThreshold
          Value: '80'
        - Namespace: aws:autoscaling:trigger
          OptionName: LowerThreshold
          Value: '20'
        - Namespace: aws:autoscaling:updatepolicy:rollingupdate
          OptionName: MaxBatchSize
          Value: '1'
        - Namespace: aws:autoscaling:updatepolicy:rollingupdate
          OptionName: MinInstancesInService
          Value: '0'
        - Namespace: aws:autoscaling:updatepolicy:rollingupdate
          OptionName: RollingUpdateEnabled
          Value: 'true'
        - Namespace: aws:autoscaling:updatepolicy:rollingupdate
          OptionName: RollingUpdateType
          Value: Health
        - Namespace: aws:ec2:vpc
          OptionName: AssociatePublicIpAddress
          Value: 'false'
        - Namespace: aws:ec2:vpc
          OptionName: ELBScheme
          Value: !If [ PrivateDeploy, 'internal', 'public' ]      
        - Namespace: aws:ec2:vpc
          OptionName: ELBSubnets
          Value: !Join
            - ','
            - - !Ref SubnetPublicA
              - !Ref SubnetPublicB
        - Namespace: aws:ec2:vpc
          OptionName: Subnets
          Value: !Join
            - ','
            - - !Ref SubnetAppA
              - !Ref SubnetAppB
        - Namespace: aws:ec2:vpc
          OptionName: VPCId
          Value: !Ref VPCId
        - Namespace: aws:elasticbeanstalk:command
          OptionName: DeploymentPolicy
          Value: Rolling
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: LoadBalancerType
          Value: application
        - Namespace: aws:elasticbeanstalk:healthreporting:system
          OptionName: SystemType
          Value: enhanced
        - Namespace: aws:elbv2:loadbalancer
          OptionName: IdleTimeout
          Value: 240
        - Namespace: aws:elbv2:loadbalancer
          OptionName: SecurityGroups
          Value: !Ref SGPublic
        - Namespace: aws:elbv2:loadbalancer
          OptionName: ManagedSecurityGroup
          Value: !Ref SGPublic
        - Namespace: aws:elbv2:listener:default
          OptionName: ListenerEnabled
          Value: false
        - Namespace: aws:elbv2:listener:443
          OptionName: DefaultProcess
          Value: https
        - Namespace: aws:elbv2:listener:443
          OptionName: Protocol
          Value: HTTPS
        - Namespace: aws:elbv2:listener:443
          OptionName: SSLCertificateArns
          Value: !Ref SslCertificate
        - Namespace: aws:elasticbeanstalk:environment:process:https
          OptionName: Port
          Value: 443
        - Namespace: aws:elasticbeanstalk:environment:process:https
          OptionName: Protocol
          Value: HTTPS          
        - Namespace: aws:elasticbeanstalk:environment:process:https
          OptionName: StickinessEnabled
          Value: true  
        - Namespace: aws:elasticbeanstalk:container:tomcat:jvmoptions
          OptionName: Xmx
          Value: !FindInMap [tomcatconfig, !Ref WebInstanceType, Xmx]    


  OHDSIEnvironmentNoACM:
    Type: 'AWS::ElasticBeanstalk::Environment'
    Condition: NotDeployACM
    Properties:
      ApplicationName: !Ref OHDSIApp
      Description: OHDSI Atlas and WebAPI
      SolutionStackName: 64bit Amazon Linux 2018.03 v3.1.6 running Tomcat 8.5 Java 8
      VersionLabel: Initial Version
      EnvironmentName: !Ref EBEndpoint
      CNAMEPrefix: !Ref EBEndpoint
      Tier:
        Name: WebServer
        Type: Standard
        Version: ' '
      OptionSettings:
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: IamInstanceProfile
          Value: !Ref EBInstanceProfile 
        - Namespace: 'aws:elasticbeanstalk:environment'
          OptionName: ServiceRole
          Value: !Ref EBServiceRole        
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: !Ref WebAsgMin
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: !Ref WebAsgMax
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: EC2KeyName
          Value: !Ref 'EC2KeyName'
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: !Ref WebInstanceType
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: SecurityGroups
          Value: !Ref SGApp
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: SSHSourceRestriction
          Value: 'tcp, 22, 22, 127.0.0.1/32'
        - Namespace: aws:autoscaling:trigger
          OptionName: MeasureName
          Value: CPUUtilization
        - Namespace: aws:autoscaling:trigger
          OptionName: Unit
          Value: Percent
        - Namespace: aws:autoscaling:trigger
          OptionName: UpperThreshold
          Value: '80'
        - Namespace: aws:autoscaling:trigger
          OptionName: LowerThreshold
          Value: '20'
        - Namespace: aws:autoscaling:updatepolicy:rollingupdate
          OptionName: MaxBatchSize
          Value: '1'
        - Namespace: aws:autoscaling:updatepolicy:rollingupdate
          OptionName: MinInstancesInService
          Value: '0'
        - Namespace: aws:autoscaling:updatepolicy:rollingupdate
          OptionName: RollingUpdateEnabled
          Value: 'true'
        - Namespace: aws:autoscaling:updatepolicy:rollingupdate
          OptionName: RollingUpdateType
          Value: Health
        - Namespace: aws:ec2:vpc
          OptionName: AssociatePublicIpAddress
          Value: 'false'
        - Namespace: aws:ec2:vpc
          OptionName: ELBScheme
          Value: !If [ PrivateDeploy, 'internal', 'public' ]
        - Namespace: aws:ec2:vpc
          OptionName: ELBSubnets
          Value: !Join
            - ','
            - - !Ref SubnetPublicA
              - !Ref SubnetPublicB
        - Namespace: aws:ec2:vpc
          OptionName: Subnets
          Value: !Join
            - ','
            - - !Ref SubnetAppA
              - !Ref SubnetAppB
        - Namespace: aws:ec2:vpc
          OptionName: VPCId
          Value: !Ref VPCId
        - Namespace: aws:elasticbeanstalk:command
          OptionName: DeploymentPolicy
          Value: Rolling
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: LoadBalancerType
          Value: application
        - Namespace: aws:elasticbeanstalk:healthreporting:system
          OptionName: SystemType
          Value: enhanced
        - Namespace: aws:elbv2:loadbalancer
          OptionName: IdleTimeout
          Value: 240
        - Namespace: aws:elbv2:loadbalancer
          OptionName: SecurityGroups
          Value: !Ref SGPublic
        - Namespace: aws:elbv2:loadbalancer
          OptionName: ManagedSecurityGroup
          Value: !Ref SGPublic
        - Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName: StickinessEnabled
          Value: true 
        - Namespace: aws:elasticbeanstalk:environment:process:https
          OptionName: Port
          Value: 443
        - Namespace: aws:elasticbeanstalk:environment:process:https
          OptionName: Protocol
          Value: HTTPS
        - Namespace: aws:elasticbeanstalk:environment:process:https
          OptionName: StickinessEnabled
          Value: true 
        - Namespace: aws:elasticbeanstalk:container:tomcat:jvmoptions
          OptionName: Xmx
          Value: !FindInMap [tomcatconfig, !Ref WebInstanceType, Xmx]    

Outputs:
  PublicAlbDnsName:
    Value: !If [ DeployACM, !GetAtt 'OHDSIEnvironmentACM.EndpointURL', !GetAtt 'OHDSIEnvironmentNoACM.EndpointURL' ]

